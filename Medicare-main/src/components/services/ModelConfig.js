const Models = [
    {
        name: 'Diabetes',
        head: 'Detect Diabetes',
        inputs: [
            { name: 'Pregnancies' , placeholder: 'Number of preganancies' },
            { name: 'Glucose' , placeholder: 'Blood glucose level' },
            { name: 'BloodPressure' , placeholder: 'Lower blood pressure' },
            { name: 'SkinThickness:' , placeholder: 'Skin thickness(mm)' },
            { name: 'Insulin:' , placeholder: '2 Hr serum insulin(mu U/ml)' },
            { name: 'BMI:' , placeholder: 'weight(kg)/height^2(m)' },
            { name: 'DiabetesPedigreeFunction:' , placeholder: 'Family history' , default: '0.47' },
            { name: 'Age:' , placeholder: 'Your age' },
        ],
        mean : [3.84505208,120.89453125,69.10546875,20.53645833,79.79947917,31.99257812, 0.4718763, 33.24088542 ],
        std : [  3.36738361,31.95179591,19.34320163,15.94182863,115.16894926,7.87902573,0.33111282,11.75257265],
        extract: function(){
            return this.inputs.map(element => element.name);
        }
    },
    {
        name: 'HeartAttack',
        head: 'Heart Attack Detection',
        desc: 'Numbers should be decimal',
        inputs: [
            { name: 'Age' , placeholder: 'Age' },
            { name: 'Sex' , placeholder: 'M=1 F=0' },
            { name: 'Chest Pain' , placeholder: '0 = asymptomatic,1 = typical angina,2 = atypical angina,3 = non-anginal pain' },
            { name: 'Blood Pressure:' , placeholder: 'mm Hg' },
            { name: 'Cholestrol:' , placeholder: 'serum cholestoral in mg/dl' },
            { name: 'Blood Sugar:' , placeholder: 'fasting blood sugar > 120 mg/dl (1=true; 0=false)' },
            { name: 'Electrocardio results:' , placeholder: '(1=normal; 2=ST-T wave abnormality; 0=hypertrophy)' },
            { name: 'Max heart rate:' , placeholder: 'Family history' },
            { name: 'Exercise induced angina:' , placeholder: 'Exercise induced angina(1=yes; 0=no)' },
            { name: 'Old peak:' , placeholder: 'ST depression induced by exercise relative to rest' },
            { name: 'Slope:' , placeholder: 'ST segment (2=upsloping;1=flat;0=downsloping)' },
            { name: 'Ca:' , placeholder: 'Number of major vessels (0-3) colored by flourosopy' },
            { name: 'thal:' , placeholder: '2=normal;1=fixed defect;3=reversable defect' },
        ],
        mean : [5.43663366e+01,6.83168317e-01,9.66996700e-01,1.31623762e+02,
            2.46264026e+02,1.48514851e-01,5.28052805e-01,1.49646865e+02,
            3.26732673e-01,1.03960396e+00,1.39933993e+00,7.29372937e-01,
            2.31353135e+00],
        std : [ 9.06710164,0.46524119,1.03034803,17.50917807,51.74515101,0.3556096,
            0.52499112,22.86733258,0.46901859,1.15915747,0.61520843,1.0209175,
            0.61126531],
        extract: function(){
            return this.inputs.map(element => element.name);
        }
    },
    {
        name: 'Cancer',
        head: 'Cancerous Tumour Detection',
        desc: 'Numbers should be decimal',
        inputs: [
            { name: 'Mean Radius' , placeholder: 'Mean radius' },
            { name: 'Mean Texture' , placeholder: '9.71 to 39.3' },
            { name: 'Mean Perimeter' , placeholder: '43.8 to 189' },
            { name: 'Mean Area' , placeholder: '144 to 2.5k' },
            { name: 'Mean Smoothness' , placeholder: '0.05 to 0.16' },
            { name: 'Mean Compactness' , placeholder: '0.02 to 0.35' },
            { name: 'Mean Concavity' , placeholder: '0 to 0.43' },
            { name: 'Concave points mean' , placeholder: '0 to 0.2' },
            { name: 'symmetry_mean' , placeholder: '0.11 to 0.3' },
            { name: 'fractal_dimension_mean' , placeholder: '0.05 to 0.1' },
            { name: 'radius_se' , placeholder: '0.11 to 2.87' },
            { name: 'texture_se' , placeholder: '0.36 to 4.88' },
            { name: 'perimeter_se' , placeholder: '0.76 to 22' },
            { name: 'area_se' , placeholder: '6.8 to 542' },
            { name: 'smoothness_se' , placeholder: '0 to 0.03' },
            { name: 'compactness_se' , placeholder: '0 to 0.14' },
            { name: 'concavity_se' , placeholder: '0 to 0.4' },
            { name: 'concave points_se' , placeholder: '0 to 0.05' },
            { name: 'symmetry_se' , placeholder: '0.01 to 0.08' },
            { name: 'fractal_dimension_se' , placeholder: '0 to 0.03' },
            { name: 'radius_worst' , placeholder: '7.93 to 36' },
            { name: 'texture_worst' , placeholder: '12 to 49.5' },
            { name: 'perimeter' , placeholder: '50.4 to 251' },
            { name: 'area_worst' , placeholder: '185 to 4.25k' },
            { name: 'smoothness_worst' , placeholder: '0.07 to 0.22' },
            { name: 'compactness_worst' , placeholder: '0.03 to 1.06' },
            { name: 'concavity_worst' , placeholder: '0 to 1.25' },
            { name: 'concave points_worst' , placeholder: '0 to 0.29' },
            { name: 'symmetry_worst' , placeholder: '0.16 to 0.66' },
            { name: 'fractal_dimension_worst' , placeholder: '0.06 to 0.21' },
        ],
        mean : [1.41272917e+01,1.92896485e+01,9.19690334e+01,6.54889104e+02,
            9.63602812e-02,1.04340984e-01,8.87993158e-02,4.89191459e-02,
            1.81161863e-01,6.27976098e-02,4.05172056e-01,1.21685343e+00,
            2.86605923e+00,4.03370791e+01,7.04097891e-03,2.54781388e-02,
            3.18937163e-02,1.17961371e-02,2.05422988e-02,3.79490387e-03,
            1.62691898e+01,2.56772232e+01,1.07261213e+02,8.80583128e+02,
            1.32368594e-01,2.54265044e-01,2.72188483e-01,1.14606223e-01,
            2.90075571e-01,8.39458172e-02],
        std : [3.52095076e+00,4.29725464e+00,2.42776193e+01,3.51604754e+02,
            1.40517641e-02,5.27663291e-02,7.96497253e-02,3.87687325e-02,
            2.73901809e-02,7.05415588e-03,2.77068942e-01,5.51163427e-01,
            2.02007710e+00,4.54510134e+01,2.99987837e-03,1.78924359e-02,
            3.01595231e-02,6.16486075e-03,8.25910439e-03,2.64374475e-03,
            4.82899258e+00,6.14085432e+00,3.35730016e+01,5.68856459e+02,
            2.28123569e-02,1.57198171e-01,2.08440875e-01,6.56745545e-02,
            6.18130785e-02,1.80453893e-02],
        extract: function(){
            return this.inputs.map(element => element.name);
        }
    }
]

export default Models;